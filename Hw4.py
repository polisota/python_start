# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются
# в обоих наборах. Пользователь вводит 2 числа. n — кол-во элементов первого множества.
# m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

print('Задача 22:')
n = int(input('Введите количество элементов первого множества: '))
m = int(input('Введите количество элементов второго множества: '))
nSet = set()
mSet = set()
for i in range(n):
    nSet.add(input('Введите элемент первого множества: '))
for i in range(m):
    mSet.add(input('Введите элемент второго множества: '))
resultSet = sorted(nSet.intersection(mSet))
print(resultSet)

# В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке,
# причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних.
# Всего на грядке растёт N кустов. Эти кусты обладают разной урожайностью, поэтому ко времени сбора
# на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит
# из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь
# непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход
# собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

print('Задача 24:')
from random import randint
berries = list(randint(1, 100) for i in range(int(input('Введите количество кустов: '))))
print(berries)
bushes = len(berries)
pickBerries = list()
for i in range(bushes-1):
    pickBerries.append(berries[i - 1] + berries[i] + berries[i + 1])
print(max(pickBerries))